/* Copyright (C) OnePub IP Pty Ltd - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Brett Sutton <bsutton@onepub.dev>, Jan 2022
 */

import 'package:args/command_runner.dart';
import 'package:dcli/dcli.dart';

import '../../onepub_settings.dart';
import '../../pub/global_packages.dart';
import '../../pub/system_cache.dart';

/// Imports a the onepub token generated by the onepub login process
/// and then addes it
class DeactivateCommand extends Command<int> {
  ///
  DeactivateCommand() : super() {}

  @override
  String get description => "Remove a previously activated package.";

  @override
  String get name => 'deactivate';

  @override
  Future<int> run() async {
    await deactivate();
    return 0;
  }

  GlobalPackages? _globals;
  late final SystemCache cache = SystemCache(isOffline: false);

  GlobalPackages get globals => _globals ??= GlobalPackages(cache);

  late Iterable<String> args = argResults.rest;

  ///
  Future<void> deactivate() async {
    OnePubSettings.load();

    var package = readArg('No package to deactivate given.');

    if (!globals.deactivate(
      package,
    )) printerr(red("No package with the name '$package' found."));
  }

  String readArg([String error = '']) {
    if (args.isEmpty) usageException(error);
    var arg = args.first;
    args = args.skip(1);
    return arg;
  }

  ArgResults get argResults {
    final a = super.argResults;
    if (a == null) {
      throw StateError(
          'argResults cannot be used before Command.run is called.');
    }
    return a;
  }
}
